<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-06-08T16:41:51+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Blog</title><subtitle></subtitle><author><name>choomi o_omi</name><email>whdudal1217@naver.com</email></author><entry><title type="html">Spring boot 2</title><link href="http://localhost:4000/Spring-Boot-2/" rel="alternate" type="text/html" title="Spring boot 2" /><published>2022-06-08T00:00:00+09:00</published><updated>2022-06-08T00:00:00+09:00</updated><id>http://localhost:4000/Spring%20Boot-2</id><content type="html" xml:base="http://localhost:4000/Spring-Boot-2/"><![CDATA[<h2 id="springboot의-시작점-만들기">SpringBoot의 시작점 만들기</h2>

<h4 id="applicationjava">Application.java</h4>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>@SpringBootApplication
public class Application {
    public static void main(String[] args) {
        SpringApplication.run(Application.class,args);
    }
}
</code></pre></div></div>
<h4 id="springbootapplication-의-기능">@springBootApplication 의 기능</h4>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>- 스프링 부트의 자동설정
- 스프링 Bean 읽기와 생성을 모두 자동으로
- 이 어노테이션이 있는 부분부터 설정을 읽음
	- 고로 이 클래스는 항상 프로젝트 최상단에 위치해야함.
</code></pre></div></div>

<h4 id="springapplicaionrun">SpringApplicaion.run</h4>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>- main에서 실행하는 이 메소드가 내장WAS를 실행합니다.
	- 내장WAS : 
		- WAS를 외부에 두지 않음
		- 톰캣 설치 필요가 없어짐
		- JAR 파일 실행
</code></pre></div></div>

<hr />

<h4 id="hellojava">Hello.java</h4>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>@RestController
public class HelloController {

    @GetMapping("/hello")
    public String hello(){
        return "hello";
    }
}
</code></pre></div></div>
<h4 id="restcontroller">@RestController</h4>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>- 컨트롤러를 JSON을 반환하는 컨트롤러로 생성 #### @GetMapping
- Get Method
</code></pre></div></div>

<hr />

<h2 id="junit-을-사용한-테스트-코드">JUnit 을 사용한 테스트 코드</h2>

<p>테스트 코드 작성을 도와주는 프레임워크중 하나인 
xUnit을 사용</p>

<hr />

<p>JUnit 5부터는 @RunWith가 아닌 Extension이라는 일관된 방법을 통해 테스트를 실행하는 방법을 커스터 마이징 하는 것이다. 
사용법은 @RunWith와 비슷하게 @ExtendWith라는 애노테이션을 사용해서 @ExtendWith(MyExtension.class)처럼  Extension 구현체를 지정
@ExtendWith 는 메타어노테이션으로 다른 어노테이션에 포함될 수 있는 어노테이션이므로
@ExtendWith 를 포함한 어떤 어노테이션이 설정되어 있다면 @ExtendWith 를 생략 할 수 있다.</p>]]></content><author><name>choomi o_omi</name><email>whdudal1217@naver.com</email></author><summary type="html"><![CDATA[SpringBoot의 시작점 만들기]]></summary></entry><entry><title type="html">Spring boot 1</title><link href="http://localhost:4000/Spring-Boot-1/" rel="alternate" type="text/html" title="Spring boot 1" /><published>2022-06-06T00:00:00+09:00</published><updated>2022-06-06T00:00:00+09:00</updated><id>http://localhost:4000/Spring%20Boot-1</id><content type="html" xml:base="http://localhost:4000/Spring-Boot-1/"><![CDATA[<h3 id="스프링-부트와-aws로-혼자-구현하는-웹-서비스---1일차">스프링 부트와 AWS로 혼자 구현하는 웹 서비스 - 1일차</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>buildscript {
    ext{
        springBootVersion = '2.1.7.RELEASE'
    }
    repositories{
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}
</code></pre></div></div>

<h4 id="ext">ext</h4>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>- build.gradle에서 사용하는 전역변수를 설정하겠다는 의미
- springBootVersion 전역변수를 생성하고 그 값을 '2.1.7.RELEASE'로 하겠다
</code></pre></div></div>

<p>repositories 중 
‘jcenter’ is deprecated</p>

<p><code class="language-plaintext highlighter-rouge">jcenter</code>는 mavenCentral의 단점인 라이브러리 업로드의 복잡성을 개선한 저장소입니다.
하지만 지금은 보안 문제로 사용 X</p>

<p><code class="language-plaintext highlighter-rouge">repositories</code>는 각종 의존성들을 어떤 원격 저장소에서 받을지 결정
<code class="language-plaintext highlighter-rouge">mavenCentral()</code>을 많이 사용</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>apply plugins: 'java'
apply plugins: 'eclipse'
apply plugins: 'org.springframework.boot'
apply plugins: 'io.spring.dependency-management'
</code></pre></div></div>

<p>앞서 선언한 플러그인 의존성들을 적용할 것인지 결정하는 코드</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>apply plugins: 'io.spring.dependency-management'
</code></pre></div></div>
<p>이 플러그인은 스프링 부트의 의존성들을 관리해 주는 플러그인</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}
</code></pre></div></div>
<p>교재 상에선 
compile 이라고 쓰여있지만 implementation으로</p>

<p>완성된 build.gradle</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>buildscript {
    ext{
        springBootVersion = '2.1.7.RELEASE'
    }
    repositories{
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
//        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'java'
    id 'eclipse'
    id "org.springframework.boot" version "2.7.0"
    id "io.spring.dependency-management" version "1.0.11.RELEASE"
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
//    implementation('org.springframework.boot:spring-boot-starter-websocket:2.6.7')
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

group 'com.edu.book'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

test {
    useJUnitPlatform()
}
</code></pre></div></div>

<p>git commit은 생략</p>

<hr />]]></content><author><name>choomi o_omi</name><email>whdudal1217@naver.com</email></author><summary type="html"><![CDATA[스프링 부트와 AWS로 혼자 구현하는 웹 서비스 - 1일차]]></summary></entry><entry><title type="html">Intro</title><link href="http://localhost:4000/intro/" rel="alternate" type="text/html" title="Intro" /><published>2022-06-06T00:00:00+09:00</published><updated>2022-06-06T00:00:00+09:00</updated><id>http://localhost:4000/intro</id><content type="html" xml:base="http://localhost:4000/intro/"><![CDATA[<p><br />
<br /></p>
<h2 id="intro">Intro</h2>

<p><br />
안녕하세요!</p>

<p><br /></p>

<hr />

<h2 id="history">History</h2>

<table>
  <thead>
    <tr>
      <th> </th>
      <th style="text-align: center">2022</th>
      <th style="text-align: right"> </th>
    </tr>
    <tr>
      <th>MONTH</th>
      <th style="text-align: center">WHAT DID I DO</th>
      <th style="text-align: right">💖</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><strong>January</strong></td>
      <td style="text-align: center">IT기업 취업</td>
      <td style="text-align: right"> </td>
    </tr>
    <tr>
      <td><strong>May</strong></td>
      <td style="text-align: center">정보처리기사 취득</td>
      <td style="text-align: right"> </td>
    </tr>
    <tr>
      <td><strong>December</strong></td>
      <td style="text-align: center">SQLD 취득</td>
      <td style="text-align: right"> </td>
    </tr>
  </tbody>
</table>

<hr />

<h2 id="what-can-i-do">What can i do</h2>

<ul>
  <li>JAVA</li>
  <li>PostgreSql</li>
  <li>Oracle</li>
  <li>SpringFramework
    <ul>
      <li>Egov</li>
      <li>Springboot</li>
    </ul>
  </li>
</ul>]]></content><author><name>choomi o_omi</name><email>whdudal1217@naver.com</email></author><summary type="html"><![CDATA[Intro]]></summary></entry></feed>