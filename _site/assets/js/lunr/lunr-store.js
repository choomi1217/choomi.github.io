var store = [{
        "title": "Spring boot 1",
        "excerpt":"스프링 부트와 AWS로 혼자 구현하는 웹 서비스 - 1일차   buildscript {     ext{         springBootVersion = '2.1.7.RELEASE'     }     repositories{         mavenCentral()         jcenter()     }     dependencies {         classpath(\"org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}\")     } }   ext  - build.gradle에서 사용하는 전역변수를 설정하겠다는 의미 - springBootVersion 전역변수를 생성하고 그 값을 '2.1.7.RELEASE'로 하겠다   repositories 중  ‘jcenter’ is deprecated   jcenter는 mavenCentral의 단점인 라이브러리 업로드의 복잡성을 개선한 저장소입니다. 하지만 지금은 보안 문제로 사용 X   repositories는 각종 의존성들을 어떤 원격 저장소에서 받을지 결정 mavenCentral()을 많이 사용   apply plugins: 'java' apply plugins: 'eclipse' apply plugins: 'org.springframework.boot' apply plugins: 'io.spring.dependency-management'   앞서 선언한 플러그인 의존성들을 적용할 것인지 결정하는 코드   apply plugins: 'io.spring.dependency-management'  이 플러그인은 스프링 부트의 의존성들을 관리해 주는 플러그인   dependencies {     implementation 'org.springframework.boot:spring-boot-starter-web'     testImplementation 'org.springframework.boot:spring-boot-starter-test' }  교재 상에선  compile 이라고 쓰여있지만 implementation으로   완성된 build.gradle   buildscript {     ext{         springBootVersion = '2.1.7.RELEASE'     }     repositories{         mavenCentral()         maven {             url \"https://plugins.gradle.org/m2/\"         } //        jcenter()     }     dependencies {         classpath(\"org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}\")     } }  plugins {     id 'java'     id 'eclipse'     id \"org.springframework.boot\" version \"2.7.0\"     id \"io.spring.dependency-management\" version \"1.0.11.RELEASE\" }  dependencies {     implementation 'org.springframework.boot:spring-boot-starter-web' //    implementation('org.springframework.boot:spring-boot-starter-websocket:2.6.7')     testImplementation 'org.springframework.boot:spring-boot-starter-test' }  group 'com.edu.book' version '1.0-SNAPSHOT'  repositories {     mavenCentral() }  dependencies {     testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'     testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1' }  test {     useJUnitPlatform() }   git commit은 생략     ","categories": [],
        "tags": [],
        "url": "/Spring-Boot-1/",
        "teaser": "/assets/images/blog_icon.jpg"
      },{
        "title": " Intro ",
        "excerpt":"     Intro     안녕하세요!         History                          2022                         MONTH       WHAT DID I DO       💖                       January       IT기업 취업                         May       정보처리기사 취득                         December       SQLD 취득                     What can i do      JAVA   PostgreSql   Oracle   SpringFramework            Egov       Springboot          ","categories": [],
        "tags": [],
        "url": "/intro/",
        "teaser": "/assets/images/blog_icon.jpg"
      },{
        "title": "Spring boot 2",
        "excerpt":" SpringBoot의 시작점 만들기   Application.java  @SpringBootApplication public class Application {     public static void main(String[] args) {         SpringApplication.run(Application.class,args);     } }  @springBootApplication 의 기능  - 스프링 부트의 자동설정 - 스프링 Bean 읽기와 생성을 모두 자동으로 - 이 어노테이션이 있는 부분부터 설정을 읽음 \t- 고로 이 클래스는 항상 프로젝트 최상단에 위치해야함.   SpringApplicaion.run  - main에서 실행하는 이 메소드가 내장WAS를 실행합니다. \t- 내장WAS :  \t\t- WAS를 외부에 두지 않음 \t\t- 톰캣 설치 필요가 없어짐 \t\t- JAR 파일 실행     Hello.java  @RestController public class HelloController {      @GetMapping(\"/hello\")     public String hello(){         return \"hello\";     } }  @RestController  - 컨트롤러를 JSON을 반환하는 컨트롤러로 생성 #### @GetMapping - Get Method     JUnit 을 사용한 테스트 코드   테스트 코드 작성을 도와주는 프레임워크중 하나인  xUnit을 사용     JUnit 5부터는 @RunWith가 아닌 Extension이라는 일관된 방법을 통해 테스트를 실행하는 방법을 커스터 마이징 하는 것이다.  사용법은 @RunWith와 비슷하게 @ExtendWith라는 애노테이션을 사용해서 @ExtendWith(MyExtension.class)처럼  Extension 구현체를 지정 @ExtendWith 는 메타어노테이션으로 다른 어노테이션에 포함될 수 있는 어노테이션이므로 @ExtendWith 를 포함한 어떤 어노테이션이 설정되어 있다면 @ExtendWith 를 생략 할 수 있다.   ","categories": [],
        "tags": [],
        "url": "/Spring-Boot-2/",
        "teaser": "/assets/images/blog_icon.jpg"
      },{
        "title": "Java version",
        "excerpt":"Java Version  회사에서 JAVA Version에 대한 궁금증이 생겨서 쓰는 글입니다.   누구는 Java 8, Java 9, Java 10 .. 이렇게 쓰고   누군 JDK 1.8, JRE SE 7…   내가 JAVA의 버전에 대해서 잘 모른다고 생각이 들었고 이에 대해 공부해보고자 한데 오라클의 자바관련 문서들은 너무 보기 싫게 생겼다..     ","categories": [],
        "tags": [],
        "url": "/Java-Version/",
        "teaser": "/assets/images/blog_icon.jpg"
      },{
        "title": "Spring boot 3",
        "excerpt":"JUnit 을 사용한 테스트 코드   테스트 코드 작성을 도와주는 프레임워크중 하나인 xUnit을 사용   @WebMvcTest(controllers = HelloController.class) public class HelloControllerTest {      @Autowired     private MockMvc mvc;      @Test     public void ReturnHello() throws Exception {         String hello = \"hello\";         mvc.perform(                 get(\"/hello\"))                 .andExpect(status().isOk()) \t\t\t\t                 .andExpect(content().string(hello));     }  }    JUnit 5부터는 @RunWith가 아닌 Extension이라는 일관된 방법을 통해 테스트를 실행하는 방법을 커스터 마이징 하는 것이다.    사용법은 @RunWith와 비슷하게 @ExtendWith라는 애노테이션을 사용해서    @ExtendWith(MyExtension.class)처럼 Extension 구현체를 지정   @ExtendWith 는 메타어노테이션으로 다른 어노테이션에 포함될 수 있는 어노테이션이므로   @ExtendWith 를 포함한 어떤 어노테이션이 설정되어 있다면 @ExtendWith 를 생략 할 수 있다.        @WebMvcTest            Web(Spring MVC)에 집중할 수 있는 어노테이션 ( MVC를 위한 테스트 )       웹에서 테스트하기 힘든 컨트롤러를 테스트하는 데 적합.       웹상에서 요청과 응답에 대해 테스트할 수 있음.       시큐리티, 필터까지 자동으로 테스트하며, 수동으로 추가/삭제 가능.       Application Context 완전하게 Start 시키지 않고 web layer를 테스트 하고 싶을 때           org.springframework.test.web.servlet.MockMvc            웹 API 테스트시 이용       스프링 MVC 테스트의 시작점       이 클래스를 통해 HTTP GET, POST … 등 API 테스트           mvc.perform( get(“/hello”) )            MockMvc를 통해 /hello 주소로 HTTP GET 요청       체이닝 지원             체이닝 테스트 코드   public class ChainningTest {      @Test     public void testObjectSetter(){         TestPeaple peaple = new TestPeaple();         peaple.setAge(26).setHeight(168).setName(\"앵미\");     }  }  public class TestPeaple {     private int age;     private int height;     private String name;      public int getAge() {         return age;     }      public int getHeight() {         return height;     }      public String getName() {         return name;     }      public TestPeaple setAge(int age){         this.age = age;         return this;     }      public TestPeaple setHeight(int height){         this.height = height;         return this;     }      public TestPeaple setName(String name){         this.name = name;         return this;     } }   return으로 자신을 객체로 해서 돌려주면 체이닝 객체생성 할 수 있음   집에 가서 마저 작성하기!   ","categories": [],
        "tags": [],
        "url": "/Spring-Boot-3/",
        "teaser": "/assets/images/blog_icon.jpg"
      },{
    "title": null,
    "excerpt":"","url": "http://localhost:4000/"
  },{
    "title": null,
    "excerpt":"var idx = lunr(function () {   this.field('title')   this.field('excerpt')   this.field('categories')   this.field('tags')   this.ref('id')    this.pipeline.remove(lunr.trimmer)    for (var item in store) {     this.add({       title: store[item].title,       excerpt: store[item].excerpt,       categories: store[item].categories,       tags: store[item].tags,       id: item     })   } });  $(document).ready(function() {   $('input#search').on('keyup', function () {     var resultdiv = $('#results');     var query = $(this).val().toLowerCase();     var result =       idx.query(function (q) {         query.split(lunr.tokenizer.separator).forEach(function (term) {           q.term(term, { boost: 100 })           if(query.lastIndexOf(\" \") != query.length-1){             q.term(term, {  usePipeline: false, wildcard: lunr.Query.wildcard.TRAILING, boost: 10 })           }           if (term != \"\"){             q.term(term, {  usePipeline: false, editDistance: 1, boost: 1 })           }         })       });     resultdiv.empty();     resultdiv.prepend(''+result.length+' 개 결과 발견 ');     for (var item in result) {       var ref = result[item].ref;       if(store[ref].teaser){         var searchitem =           ''+             ''+               ''+                 ''+store[ref].title+''+               ' '+               ''+                 ''+               ''+               ''+store[ref].excerpt.split(\" \").splice(0,20).join(\" \")+'... '+             ''+           '';       }       else{     \t  var searchitem =           ''+             ''+               ''+                 ''+store[ref].title+''+               ' '+               ''+store[ref].excerpt.split(\" \").splice(0,20).join(\" \")+'... '+             ''+           '';       }       resultdiv.append(searchitem);     }   }); }); ","url": "http://localhost:4000/assets/js/lunr/lunr-en.js"
  },{
    "title": null,
    "excerpt":"step1list = new Array(); step1list[\"ΦΑΓΙΑ\"] = \"ΦΑ\"; step1list[\"ΦΑΓΙΟΥ\"] = \"ΦΑ\"; step1list[\"ΦΑΓΙΩΝ\"] = \"ΦΑ\"; step1list[\"ΣΚΑΓΙΑ\"] = \"ΣΚΑ\"; step1list[\"ΣΚΑΓΙΟΥ\"] = \"ΣΚΑ\"; step1list[\"ΣΚΑΓΙΩΝ\"] = \"ΣΚΑ\"; step1list[\"ΟΛΟΓΙΟΥ\"] = \"ΟΛΟ\"; step1list[\"ΟΛΟΓΙΑ\"] = \"ΟΛΟ\"; step1list[\"ΟΛΟΓΙΩΝ\"] = \"ΟΛΟ\"; step1list[\"ΣΟΓΙΟΥ\"] = \"ΣΟ\"; step1list[\"ΣΟΓΙΑ\"] = \"ΣΟ\"; step1list[\"ΣΟΓΙΩΝ\"] = \"ΣΟ\"; step1list[\"ΤΑΤΟΓΙΑ\"] = \"ΤΑΤΟ\"; step1list[\"ΤΑΤΟΓΙΟΥ\"] = \"ΤΑΤΟ\"; step1list[\"ΤΑΤΟΓΙΩΝ\"] = \"ΤΑΤΟ\"; step1list[\"ΚΡΕΑΣ\"] = \"ΚΡΕ\"; step1list[\"ΚΡΕΑΤΟΣ\"] = \"ΚΡΕ\"; step1list[\"ΚΡΕΑΤΑ\"] = \"ΚΡΕ\"; step1list[\"ΚΡΕΑΤΩΝ\"] = \"ΚΡΕ\"; step1list[\"ΠΕΡΑΣ\"] = \"ΠΕΡ\"; step1list[\"ΠΕΡΑΤΟΣ\"] = \"ΠΕΡ\"; step1list[\"ΠΕΡΑΤΑ\"] = \"ΠΕΡ\"; step1list[\"ΠΕΡΑΤΩΝ\"] = \"ΠΕΡ\"; step1list[\"ΤΕΡΑΣ\"] = \"ΤΕΡ\"; step1list[\"ΤΕΡΑΤΟΣ\"] = \"ΤΕΡ\"; step1list[\"ΤΕΡΑΤΑ\"] = \"ΤΕΡ\"; step1list[\"ΤΕΡΑΤΩΝ\"] = \"ΤΕΡ\"; step1list[\"ΦΩΣ\"] = \"ΦΩ\"; step1list[\"ΦΩΤΟΣ\"] = \"ΦΩ\"; step1list[\"ΦΩΤΑ\"] = \"ΦΩ\"; step1list[\"ΦΩΤΩΝ\"] = \"ΦΩ\"; step1list[\"ΚΑΘΕΣΤΩΣ\"] = \"ΚΑΘΕΣΤ\"; step1list[\"ΚΑΘΕΣΤΩΤΟΣ\"] = \"ΚΑΘΕΣΤ\"; step1list[\"ΚΑΘΕΣΤΩΤΑ\"] = \"ΚΑΘΕΣΤ\"; step1list[\"ΚΑΘΕΣΤΩΤΩΝ\"] = \"ΚΑΘΕΣΤ\"; step1list[\"ΓΕΓΟΝΟΣ\"] = \"ΓΕΓΟΝ\"; step1list[\"ΓΕΓΟΝΟΤΟΣ\"] = \"ΓΕΓΟΝ\"; step1list[\"ΓΕΓΟΝΟΤΑ\"] = \"ΓΕΓΟΝ\"; step1list[\"ΓΕΓΟΝΟΤΩΝ\"] = \"ΓΕΓΟΝ\";  v = \"[ΑΕΗΙΟΥΩ]\"; v2 = \"[ΑΕΗΙΟΩ]\"  function stemWord(w) {   var stem;   var suffix;   var firstch;   var origword = w;   test1 = new Boolean(true);    if(w.length '+result.length+' 개 결과 발견 ');     for (var item in result) {       var ref = result[item].ref;       if(store[ref].teaser){         var searchitem =           ''+             ''+               ''+                 ''+store[ref].title+''+               ' '+               ''+                 ''+               ''+               ''+store[ref].excerpt.split(\" \").splice(0,20).join(\" \")+'... '+             ''+           '';       }       else{     \t  var searchitem =           ''+             ''+               ''+                 ''+store[ref].title+''+               ' '+               ''+store[ref].excerpt.split(\" \").splice(0,20).join(\" \")+'... '+             ''+           '';       }       resultdiv.append(searchitem);     }   }); }); ","url": "http://localhost:4000/assets/js/lunr/lunr-gr.js"
  },{
    "title": null,
    "excerpt":"var store = [   {%- for c in site.collections -%}     {%- if forloop.last -%}       {%- assign l = true -%}     {%- endif -%}     {%- assign docs = c.docs | where_exp:'doc','doc.search != false' -%}     {%- for doc in docs -%}       {%- if doc.header.teaser -%}         {%- capture teaser -%}{{ doc.header.teaser }}{%- endcapture -%}       {%- else -%}         {%- assign teaser = site.teaser -%}       {%- endif -%}       {         \"title\": {{ doc.title | jsonify }},         \"excerpt\":           {%- if site.search_full_content == true -%}             {{ doc.content | newline_to_br |               replace:\" \", \" \" |               replace:\" \", \" \" |               replace:\" \", \" \" |               replace:\" \", \" \" |               replace:\" \", \" \" |               replace:\" \", \" \" |               replace:\" \", \" \" |               replace:\" \", \" \"|             strip_html | strip_newlines | jsonify }},           {%- else -%}             {{ doc.content | newline_to_br |               replace:\" \", \" \" |               replace:\" \", \" \" |               replace:\" \", \" \" |               replace:\" \", \" \" |               replace:\" \", \" \" |               replace:\" \", \" \" |               replace:\" \", \" \" |               replace:\" \", \" \"|             strip_html | strip_newlines | truncatewords: 50 | jsonify }},           {%- endif -%}         \"categories\": {{ doc.categories | jsonify }},         \"tags\": {{ doc.tags | jsonify }},         \"url\": {{ doc.url | relative_url | jsonify }},         \"teaser\": {{ teaser | relative_url | jsonify }}       }{%- unless forloop.last and l -%},{%- endunless -%}     {%- endfor -%}   {%- endfor -%}{%- if site.lunr.search_within_pages -%},   {%- assign pages = site.pages | where_exp:'doc','doc.search != false' -%}   {%- for doc in pages -%}     {%- if forloop.last -%}       {%- assign l = true -%}     {%- endif -%}   {     \"title\": {{ doc.title | jsonify }},     \"excerpt\":         {%- if site.search_full_content == true -%}           {{ doc.content | newline_to_br |             replace:\" \", \" \" |             replace:\" \", \" \" |             replace:\" \", \" \" |             replace:\" \", \" \" |             replace:\" \", \" \" |             replace:\" \", \" \" |             replace:\" \", \" \" |             replace:\" \", \" \"|           strip_html | strip_newlines | jsonify }},         {%- else -%}           {{ doc.content | newline_to_br |             replace:\" \", \" \" |             replace:\" \", \" \" |             replace:\" \", \" \" |             replace:\" \", \" \" |             replace:\" \", \" \" |             replace:\" \", \" \" |             replace:\" \", \" \" |             replace:\" \", \" \"|           strip_html | strip_newlines | truncatewords: 50 | jsonify }},         {%- endif -%}       \"url\": {{ doc.url | absolute_url | jsonify }}   }{%- unless forloop.last and l -%},{%- endunless -%}   {%- endfor -%} {%- endif -%}] ","url": "http://localhost:4000/assets/js/lunr/lunr-store.js"
  },{
    "title": null,
    "excerpt":" {% if page.xsl %} {% endif %} {% assign collections = site.collections | where_exp:'collection','collection.output != false' %}{% for collection in collections %}{% assign docs = collection.docs | where_exp:'doc','doc.sitemap != false' %}{% for doc in docs %} {{ doc.url | replace:'/index.html','/' | absolute_url | xml_escape }} {% if doc.last_modified_at or doc.date %}{{ doc.last_modified_at | default: doc.date | date_to_xmlschema }} {% endif %} {% endfor %}{% endfor %}{% assign pages = site.html_pages | where_exp:'doc','doc.sitemap != false' | where_exp:'doc','doc.url != \"/404.html\"' %}{% for page in pages %} {{ page.url | replace:'/index.html','/' | absolute_url | xml_escape }} {% if page.last_modified_at %}{{ page.last_modified_at | date_to_xmlschema }} {% endif %} {% endfor %}{% assign static_files = page.static_files | where_exp:'page','page.sitemap != false' | where_exp:'page','page.name != \"404.html\"' %}{% for file in static_files %} {{ file.path | replace:'/index.html','/' | absolute_url | xml_escape }} {{ file.modified_time | date_to_xmlschema }}  {% endfor %} ","url": "http://localhost:4000/sitemap.xml"
  },{
    "title": null,
    "excerpt":"Sitemap: {{ \"sitemap.xml\" | absolute_url }} ","url": "http://localhost:4000/robots.txt"
  },{
    "title": null,
    "excerpt":"{% if page.xsl %}{% endif %}Jekyll{{ site.time | date_to_xmlschema }}{{ page.url | absolute_url | xml_escape }}{% assign title = site.title | default: site.name %}{% if page.collection != \"posts\" %}{% assign collection = page.collection | capitalize %}{% assign title = title | append: \" | \" | append: collection %}{% endif %}{% if page.category %}{% assign category = page.category | capitalize %}{% assign title = title | append: \" | \" | append: category %}{% endif %}{% if title %}{{ title | smartify | xml_escape }}{% endif %}{% if site.description %}{{ site.description | xml_escape }}{% endif %}{% if site.author %}{{ site.author.name | default: site.author | xml_escape }}{% if site.author.email %}{{ site.author.email | xml_escape }}{% endif %}{% if site.author.uri %}{{ site.author.uri | xml_escape }}{% endif %}{% endif %}{% if page.tags %}{% assign posts = site.tags[page.tags] %}{% else %}{% assign posts = site[page.collection] %}{% endif %}{% if page.category %}{% assign posts = posts | where: \"categories\", page.category %}{% endif %}{% unless site.show_drafts %}{% assign posts = posts | where_exp: \"post\", \"post.draft != true\" %}{% endunless %}{% assign posts = posts | sort: \"date\" | reverse %}{% assign posts_limit = site.feed.posts_limit | default: 10 %}{% for post in posts limit: posts_limit %}{% assign post_title = post.title | smartify | strip_html | normalize_whitespace | xml_escape %}{{ post_title }}{{ post.date | date_to_xmlschema }}{{ post.last_modified_at | default: post.date | date_to_xmlschema }}{{ post.id | absolute_url | xml_escape }}{% assign excerpt_only = post.feed.excerpt_only | default: site.feed.excerpt_only %}{% unless excerpt_only %}{% endunless %}{% assign post_author = post.author | default: post.authors[0] | default: site.author %}{% assign post_author = site.data.authors[post_author] | default: post_author %}{% assign post_author_email = post_author.email | default: nil %}{% assign post_author_uri = post_author.uri | default: nil %}{% assign post_author_name = post_author.name | default: post_author %}{{ post_author_name | default: \"\" | xml_escape }}{% if post_author_email %}{{ post_author_email | xml_escape }}{% endif %}{% if post_author_uri %}{{ post_author_uri | xml_escape }}{% endif %}{% if post.category %}{% elsif post.categories %}{% for category in post.categories %}{% endfor %}{% endif %}{% for tag in post.tags %}{% endfor %}{% assign post_summary = post.description | default: post.excerpt %}{% if post_summary and post_summary != empty %}{% endif %}{% assign post_image = post.image.path | default: post.image %}{% if post_image %}{% unless post_image contains \"://\" %}{% assign post_image = post_image | absolute_url %}{% endunless %}{% endif %}{% endfor %}","url": "http://localhost:4000/feed.xml"
  }]
